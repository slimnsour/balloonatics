<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shake = false;
mag = 0.0;
render_time = 0;
xspd = 8;
yspd = 16;
x_camera_offset = 32;
y_camera_offset = 72;

target_x = oChar.x-(view_wview/2)+oChar.camera_direction*x_camera_offset;
target_y = oChar.y-(view_hview/2)-y_camera_offset;
view_xview[0] = oChar.x-(view_wview/2)+oChar.camera_direction*x_camera_offset;
view_yview[0] = oChar.y-(view_hview/2)-y_camera_offset;

//window_set_fullscreen(true);
/*
application_surface_draw_enable(false);
global.MonitorW=display_get_width();
global.MonitorH=display_get_height();
//global.Xoffset=(global.MonitorW-960)/2;
//global.Yoffset=(global.MonitorH-960)/2;
surface_resize(application_surface,1920,1080)
global.Xoffset=(global.MonitorW-1920)/2;
global.Yoffset=(global.MonitorH-1080)/2;
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// In end step bc never drags behind
// Center
//view_xview[0] = oChar.x-(view_wview/2)+oChar.camera_direction*32;
target_x = oChar.x-(view_wview/2)+oChar.camera_direction*32;
target_y = oChar.y-(view_hview/2);
//view_xview = oChar.x-320;
//view_yview = oChar.y-320;

//if (abs(view_xview[0]-target_x) &gt; 100) {
//    view_xview[0] = target_x + prev_dis + sign(prev_dis)*oCamera.spd;
//}

view_xview[0] = approach(view_xview[0], target_x, oCamera.spd)
view_yview[0] = target_y

prev_dis = view_xview[0]-target_x;

//show_debug_message("---")
//show_debug_message(room_width)
//show_debug_message(target_x)
//show_debug_message(view_xview[0])
// Limit the view to the  room
//view_xview[0] = clamp(view_xview[0], 0, room_width)
//view_yview[0] = clamp(view_yview[0], 0, room_height)

//if(view_xview[0] &lt; 0){ view_xview[0] = 0 };
// Stop camera at top of level
//if(view_yview[0] &lt; 0){ view_yview[0] = 0 };

//if(view_xview[0] &gt; (room_width-view_wview[0])){ view_xview[0] = (room_width-view_wview[0]) };

// Stop camera at bottom of level
if(view_yview[0] &gt; (room_height-view_hview[0])){ view_yview[0] = (room_height-view_hview[0]) };

//view_xview[0] = floor(view_xview[0])
//view_yview[0] = floor(view_yview[0]) 
/*
if (oChar.x &gt; (room_width-(view_wview[0] / 2))+1){
    oChar.x = (view_wview[0] / 2)+1;
    view_xview[0] = 0;
    }
if (oChar.x &lt; (view_wview[0] / 2)){
    oChar.x = (room_width-(view_wview[0] / 2));
    view_xview[0] = (room_width-view_wview[0]);
    }
*/
if(shake)
{
    view_xview[0] += choose(-mag,mag);
    view_yview[0] += choose(-mag,mag);
}

if (render_time == 15) {
    render();
    render_time = 0;
} else {
    render_time += 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// In end step bc never drags behind
// Center
target_x = oChar.x-(view_wview/2)+oChar.camera_direction*x_camera_offset;
target_y = oChar.y-(view_hview/2)//-y_camera_offset;
//if (oChar.pulse_grounded &amp;&amp; (abs(new_target_y - target_y) &gt;= 4)) {
//    target_y = new_target_y;
//}
//if (new_target_y &gt; target_y) {
//    target_y = new_target_y;
//}

if (abs(target_x - view_xview[0]) &gt; 200) {
    view_xview = target_x + prev_xdis + sign(target_x - view_xview[0])*xspd;
}

view_xview[0] = approach(view_xview[0], target_x, oCamera.xspd)
view_yview[0] = target_y

//view_yview[0] = target_y;
prev_xdis = view_xview[0] - target_x;

// Stop camera at bottom of level
if(view_yview[0] &gt; (room_height-view_hview[0])){ view_yview[0] = (room_height-view_hview[0]) };


if(shake)
{
    view_xview[0] += choose(-mag,mag);
    view_yview[0] += choose(-mag,mag);
}
//show_debug_overlay(true);
if (render_time == 15) {
    render();
    render_time = 0;
} else {
    render_time += 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//window_set_fullscreen(true);
/*
application_surface_draw_enable(false);
global.MonitorW=display_get_width();
global.MonitorH=display_get_height();
//global.Xoffset=(global.MonitorW-960)/2;
//global.Yoffset=(global.MonitorH-960)/2;
surface_resize(application_surface,1920,1080)
global.Xoffset=(global.MonitorW-1920)/2;
global.Yoffset=(global.MonitorH-1080)/2;
*/
//view_xview[0] = oChar.x-(view_wview/2)+oChar.camera_direction*32;
//view_yview[0] = oChar.y-(view_hview/2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
